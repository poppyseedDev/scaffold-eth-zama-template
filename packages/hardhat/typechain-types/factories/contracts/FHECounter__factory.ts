/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHECounter,
  FHECounterInterface,
} from "../../contracts/FHECounter";

const _abi = [
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "inputEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "inputEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061018c6100b060408051608081018252600080825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf696020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273901f8942346f7ab3a01f6d7613119bca447bb030606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c2881217905561070d806101e06000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635941195d14610046578063a87d942c1461005b578063e055f8f914610070575b600080fd5b610059610054366004610558565b610083565b005b60005460405190815260200160405180910390f35b61005961007e366004610558565b6100f5565b60006100c58484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061014592505050565b90506100d36000548261015a565b60008190556100e19061018c565b506100ee6000543361019c565b5050505050565b60006101378484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061014592505050565b90506100d3600054826101af565b6000610153838360046101e1565b9392505050565b60008261016e5761016b60006102e6565b92505b816101805761017d60006102e6565b91505b610153838360006102ff565b600061019882306103c3565b5090565b60006101a883836103c3565b5090919050565b6000826101c3576101c060006102e6565b92505b816101d5576101d260006102e6565b91505b61015383836000610440565b6000805160206106b88339815191525460405163196d0b9b60e01b8152600091600080516020610698833981519152916001600160a01b039091169063196d0b9b906102379088903390899089906004016105f8565b6020604051808303816000875af1158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a919061066a565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec90604401600060405180830381600087803b1580156102c657600080fd5b505af11580156102da573d6000803e3d6000fd5b50505050509392505050565b60006102f98263ffffffff1660046104bb565b92915050565b60008082156103135750600160f81b610317565b5060005b6000805160206106b88339815191525460405163022f65e760e31b815260048101879052602481018690526001600160f81b031983166044820152600080516020610698833981519152916001600160a01b03169063117b2f38906064015b6020604051808303816000875af1158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b9919061066a565b9695505050505050565b60006000805160206106988339815191528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b50505050505050565b60008082156104545750600160f81b610458565b5060005b6000805160206106b8833981519152546040516303056db360e31b815260048101879052602481018690526001600160f81b031983166044820152600080516020610698833981519152916001600160a01b03169063182b6d9890606401610376565b6000805160206106b883398151915254604051639cd07acb60e01b8152600091600080516020610698833981519152916001600160a01b0390911690639cd07acb9061050d9087908790600401610683565b6020604051808303816000875af115801561052c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610550919061066a565b949350505050565b60008060006040848603121561056d57600080fd5b83359250602084013567ffffffffffffffff81111561058b57600080fd5b8401601f8101861361059c57600080fd5b803567ffffffffffffffff8111156105b357600080fd5b8660208284010111156105c557600080fd5b939660209190910195509293505050565b605481106105f457634e487b7160e01b600052602160045260246000fd5b9052565b84815260018060a01b0384166020820152608060408201526000835180608084015260005b8181101561063a57602081870181015160a086840101520161061d565b50600060a0828501015260a0601f19601f83011684010191505061066160608301846105d6565b95945050505050565b60006020828403121561067c57600080fd5b5051919050565b8281526040810161015360208301846105d656feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601a2646970667358221220ecc6705426124708ea0746b1c26fb2ac399310be128aec72b9b8c19fff57e15564736f6c634300081b0033";

type FHECounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHECounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHECounter__factory extends ContractFactory {
  constructor(...args: FHECounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHECounter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHECounter__factory {
    return super.connect(runner) as FHECounter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHECounterInterface {
    return new Interface(_abi) as FHECounterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FHECounter {
    return new Contract(address, _abi, runner) as unknown as FHECounter;
  }
}
