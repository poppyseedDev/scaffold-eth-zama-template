/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  YourContract,
  YourContractInterface,
} from "../../contracts/YourContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "greetingSetter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newGreeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "premium",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "GreetingChange",
    type: "event",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "premium",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newGreeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userGreetingCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0604052601c60a09081527f4275696c64696e6720556e73746f707061626c6520417070732121210000000060c05260009061003c9082610127565b506001805460ff19169055600060025534801561005857600080fd5b50604051610a4f380380610a4f833981016040819052610077916101e5565b6001600160a01b0316608052610215565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100b257607f821691505b6020821081036100d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561012257806000526020600020601f840160051c810160208510156100ff5750805b601f840160051c820191505b8181101561011f576000815560010161010b565b50505b505050565b81516001600160401b0381111561014057610140610088565b6101548161014e845461009e565b846100d8565b6020601f82116001811461018857600083156101705750848201515b600019600385901b1c1916600184901b17845561011f565b600084815260208120601f198516915b828110156101b85787850151825560209485019460019092019101610198565b50848210156101d65786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000602082840312156101f757600080fd5b81516001600160a01b038116811461020e57600080fd5b9392505050565b60805161081261023d6000396000818160a9015281816101a3015261020901526108126000f3fe6080604052600436106100745760003560e01c8063a41368621161004e578063a41368621461010c578063cea49c3c1461011f578063e0a73a931461014c578063ef690cc01461017657600080fd5b80633ccfd60b146100805780638da5cb5b1461009757806397feba9d146100e857600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b50610095610198565b005b3480156100a357600080fd5b506100cb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f457600080fd5b506100fe60025481565b6040519081526020016100df565b61009561011a3660046104a8565b6102c2565b34801561012b57600080fd5b506100fe61013a366004610561565b60036020526000908152604090205481565b34801561015857600080fd5b506001546101669060ff1681565b60405190151581526020016100df565b34801561018257600080fd5b5061018b610393565b6040516100df91906105d7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102055760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329027bbb732b960991b60448201526064015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03164760405160006040518083038185875af1925050503d8060008114610272576040519150601f19603f3d011682016040523d82523d6000602084013e610277565b606091505b50509050806102bf5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101fc565b50565b6102e56040518060600160405280602181526020016107bc602191398233610421565b60006102f18282610672565b506001600260008282546103059190610731565b909155505033600090815260036020526040812080546001929061032a908490610731565b90915550503415610346576001805460ff191681179055610351565b6001805460ff191690555b60405133907f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad906103889084903480151591610758565b60405180910390a250565b600080546103a0906105ea565b80601f01602080910402602001604051908101604052809291908181526020018280546103cc906105ea565b80156104195780601f106103ee57610100808354040283529160200191610419565b820191906000526020600020905b8154815290600101906020018083116103fc57829003601f168201915b505050505081565b6104688383836040516024016104399392919061077d565b60408051601f198184030181529190526020810180516001600160e01b03166395ed019560e01b17905261046d565b505050565b6102bf8160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104ba57600080fd5b813567ffffffffffffffff8111156104d157600080fd5b8201601f810184136104e257600080fd5b803567ffffffffffffffff8111156104fc576104fc610492565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561052b5761052b610492565b60405281815282820160200186101561054357600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020828403121561057357600080fd5b81356001600160a01b038116811461058a57600080fd5b9392505050565b6000815180845260005b818110156105b75760208185018101518683018201520161059b565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061058a6020830184610591565b600181811c908216806105fe57607f821691505b60208210810361061e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561046857806000526020600020601f840160051c8101602085101561064b5750805b601f840160051c820191505b8181101561066b5760008155600101610657565b5050505050565b815167ffffffffffffffff81111561068c5761068c610492565b6106a08161069a84546105ea565b84610624565b6020601f8211600181146106d457600083156106bc5750848201515b600019600385901b1c1916600184901b17845561066b565b600084815260208120601f198516915b8281101561070457878501518255602094850194600190920191016106e4565b50848210156107225786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561075257634e487b7160e01b600052601160045260246000fd5b92915050565b60608152600061076b6060830186610591565b93151560208301525060400152919050565b6060815260006107906060830186610591565b82810360208401526107a28186610591565b91505060018060a01b038316604083015294935050505056fe53657474696e67206e6577206772656574696e6720272573272066726f6d202573a264697066735822122092c7dcb21442d7b73353dbb11f6ca4bacc1b6884a7e7425ea9fb2e16464a2f2c64736f6c634300081b0033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      YourContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): YourContract__factory {
    return super.connect(runner) as YourContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): YourContract {
    return new Contract(address, _abi, runner) as unknown as YourContract;
  }
}
